var PlatformBlueprint = PlatformBlueprint || {};

PlatformBlueprint.Play = new Kiwi.State('Play');


/**
* The Play in the core state that is used in the game. 
*
* It is the state where the majority of the functionality occurs 'in-game'.
* 
*
* @class Play
* @extends State
* @constructor
*/

/**
* This create method is executed when Kiwi Game reaches the boot stage of the game loop.
* @method create
* @public
*/
PlatformBlueprint.Play.create = function () {
    //camera to follow movement of player
    this.camera = this.game.cameras.defaultCamera;
    //game.stage.resize(800, 600);

    
    this.background = new Kiwi.GameObjects.StaticImage(this, this.textures.background1, 0, -57);
    this.addChild(this.background);
    this.background.scaleX = 1;
    this.background.scaleY = 1;
    this.width = this.game.stage.width;

    //Switch the background colour back to white from purple
    this.game.stage.color = 'ffffff';

    //this.generateTileMap();

    this.levelManager = new LevelManager(this);
    this.levelManager.generateTileMap();

    this.collisionManager = new CollisionManager(this);
    this.cameraManager = new CameraManager(this);

    //////////////////////////
    //enemy manager
    this.enemyManager = new EnemyManager(this);
    this.addChild(this.enemyManager);

<<<<<<< HEAD
    this.enemyManager.addEnemies(1);
=======

>>>>>>> e047e9db6d96397af4c2b2ca4db99a068bfff6df

    //individual tile dimensions
    this.tileWidth = 32;
    this.tileHeight = 32;

    //////////////////
    //ITEMS
    this.cashGroup = new Kiwi.Group(this);
    this.addChild(this.cashGroup);


    this.egon = new Egon(this, 50, 400);
    this.egon.physics.acceleration.y = 30;

    this.enemyManager.addEnemies(1);

    //Add to the screen.
    this.sloping = true;

    this.addChild(this.egon);

    this.px = this.egon.x + this.egon.box.bounds.width / 2;
    this.py = this.egon.y + this.egon.height;

    this.levelManager.generateForegroundTileMap();
    console.log('CREATE GAME');


}

/**
* This method is the main update loop. Move scrolling items and update player here
* @method update
* @public
*/
PlatformBlueprint.Play.update = function () {
    this.enemyManager.update();

    this.egon.update();
    this.egon.physics.update();

    this.updateCash();
    
    Kiwi.State.prototype.update.call(this);

    

    //check sloping collisions
    this.sloping = false;

    //CHECK TILES
    //round the player position to make tile calculation easier
    this.egon.x = Math.round(this.egon.x);
    this.egon.y = Math.round(this.egon.y);

    //bottom middle point of player to check against sloping tiles
    this.px = Math.round(this.egon.x + this.egon.box.bounds.width / 2);
    this.py = this.egon.y + this.egon.height;

    //check sloping tiles
    this.collisionManager.checkLeftSlope();
    this.collisionManager.checkRightSlope();
    
    this.collisionManager.update();
    
    this.cameraManager.updateCamera();
   // this.updateController();
}

PlatformBlueprint.Play.addCash = function(amount, x, y)  {
     tempCash = new Kiwi.GameObjects.Sprite(this, this.textures.cash, x, y);

     tempCash.physics = tempCash.components.add(new Kiwi.Components.ArcadePhysics(tempCash, tempCash.box));
     //tempCash.physics.acceleration.y = 3;
     tempCash.animation.add('drop', [0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 8, 7, 7, 8, 8, 7, 7, 8, 8, 7, 7, 8, 8], 0.05, false, true);
    
    this.cashGroup.addChild(tempCash);
};

PlatformBlueprint.Play.updateCash = function(){
    for (var i = this.cashGroup.members.length - 1; i>= 0; i--) {
        //console.log("test");
        this.cashGroup.members[i].physics.update();
    };
}